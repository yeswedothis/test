name: DEV backend CI

on:
  push:
    branches:
      - 'main'
    paths:
      - 'backend/src/main/java/**'
      - 'backend/pom.xml'
      - 'backend/Dockerfile'
      - 'backend/docker-entrypoint.sh'

env:
  IMAGE_NAME: yjring/vote-api
  DOCKER_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
  ACCESS_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  extract-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.extract_version.outputs.VERSION }}
    
    steps:
    - name: Extract version
      id: extract_version
      run: echo "::set-output name=VERSION::dev-$(echo ${GITHUB_SHA::6})"
  
  checkout-code:
    needs: extract-version
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with: 
        ref: main
        token: ${{ env.ACCESS_TOKEN }}

  setup-build-test:
    needs: checkout-code
    runs-on: ubuntu-latest
    
    steps:
    - name: Set up JDK 1.11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'

    - name: test
      run: ls

    - name: Build with Maven and generate reports
      run: mvn -B package --file backend/pom.xml

    - name: Test with Maven
      run: mvn test --file backend/pom.xml
  
  build-and-push-images:
    needs: setup-build-test
    runs-on: ubuntu-latest
    
    steps:
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to DockerHub
      uses: docker/login-action@v1 
      with:
        username: ${{ env.DOCKER_USERNAME }}
        password: ${{ env.DOCKER_PASSWORD }}

    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        context: backend/
        dockerfile: Dockerfile
        push: true
        platforms: linux/amd64,linux/arm64
        tags: ${{ env.IMAGE_NAME }}:${{ steps.extract_version.outputs.VERSION }}

  update-deployment:
    needs: build-and-push-images
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with: 
        ref: main
        token: ${{ env.ACCESS_TOKEN }}
  
    - name: Update Kubernetes deployment
      run: |
         git pull
         sed -i 's@image: .*@image: '"${{ env.IMAGE_NAME }}:${{ steps.extract_version.outputs.VERSION }}"'@' ./deploy/dev/api-deployment.yaml
  
    - name: Commit changes
      run: |
        git config --local user.email "PipelineBot"
        git config --local user.name "PipelineBot"
        git add ./deploy/dev/api-deployment.yaml
        git commit -m "Update backend image version to ${{ steps.extract_version.outputs.VERSION }}" -a
        git push
